<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- enable Method level [vs URL level] authorization This work for ROOT 
		WEB APPLICATION Level scanned components Does NOT recognize WEB Application 
		level components - for THAT need to place enable line in Dispatcher-servlet -->
	<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true">
		<csrf disabled="true" />

		<intercept-url pattern="/**,/login, /customerSignup, /vendorSignup,/home"
			access="permitAll" />
		<!-- <intercept-url pattern="/admin/**" access="hasRole('Admin')" />
		<intercept-url pattern="/customer/**" access="hasRole('Customer')" />
		<intercept-url pattern="/vendor/**" access="hasRole('Vendor')" /> -->
		<intercept-url pattern="/test"
			access="hasRole('IS_AUTHENICATED_ANONYMOUSLY')" />

		<access-denied-handler error-page="/403" />

		<form-login login-page='/login' login-processing-url="/j_spring_security_check"
			default-target-url="/home" always-use-default-target="true"
			authentication-failure-url="/login?error=true" username-parameter="username"
			password-parameter="password" />

		<logout logout-url="/logout" logout-success-url="/logoutSuccessful"
			delete-cookies="JSESSIONID" invalidate-session="true" />

	</http>

	<authentication-manager>

		<authentication-provider>
			<!-- <user-service> <user name="test" password="123" authorities="Customer" 
				/> <user name="bob" password="mypassword" authorities="ROLE_USER" /> </user-service> -->
			<!-- <password-encoder ref="passwordEncoder" /> -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password, enabled from user where 
				username=?"
				authorities-by-username-query="select username, role as user 
				from user where username=?" />
		</authentication-provider>
	</authentication-manager>
	<!-- <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"> 
		</beans:bean> -->
</beans:beans>